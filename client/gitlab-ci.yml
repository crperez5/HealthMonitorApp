image: node:chakracore-10.13

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

stages:
  - test
  - build
  - deploy
 
# job:test:
  # before_script:
    # # Add Google Chrome to aptitude's (package manager) sources
    # - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" | tee -a /etc/apt/sources.list
    # # Fetch Chrome's PGP keys for secure installation
    # - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    # # Update aptitude's package sources
    # - apt-get -qq update -y
    # # Install latest Chrome stable, Xvfb packages
    # - apt-get -qq install -y google-chrome-stable xvfb gtk2-engines-pixbuf xfonts-cyrillic xfonts-100dpi xfonts-75dpi xfonts-base xfonts-scalable imagemagick x11-apps default-jre
    # # Launch Xvfb
    # - Xvfb :0 -ac -screen 0 1024x768x24 &
    # # Export display for Chrome
    # - export DISPLAY=:99
    # # Install AngularJS CLI exclusively
    # # Add --unsafe-perm to resolve problems with node-gyp infinite loop on Docker
    # - cd client
    # - npm install --silent --unsafe-perm -g @angular/cli
    # - npm install --silent
    # - node ./node_modules/.bin/webdriver-manager update
  # stage: test
  # script: node_modules/.bin/ng test

# job:e2e:
  # before_script:
    # # Add Google Chrome to aptitude's (package manager) sources
    # - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" | tee -a /etc/apt/sources.list
    # # Fetch Chrome's PGP keys for secure installation
    # - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    # # Update aptitude's package sources
    # - apt-get -qq update -y
    # # Install latest Chrome stable, Xvfb packages
    # - apt-get -qq install -y google-chrome-stable xvfb gtk2-engines-pixbuf xfonts-cyrillic xfonts-100dpi xfonts-75dpi xfonts-base xfonts-scalable imagemagick x11-apps default-jre
    # # Launch Xvfb
    # - Xvfb :0 -ac -screen 0 1024x768x24 &
    # # Export display for Chrome
    # - export DISPLAY=:99
    # # Install AngularJS CLI exclusively
    # # Add --unsafe-perm to resolve problems with node-gyp infinite loop on Docker
    # - cd client
    # - npm install --silent --unsafe-perm -g @angular/cli
    # - npm install --silent
    # - node ./node_modules/.bin/webdriver-manager update
  # stage: test
  # script: node_modules/.bin/ng e2e

release:build:
  before_script:
    - cd client
    - npm install --silent --unsafe-perm -g @angular/cli
    - npm install --silent
    - node ./node_modules/.bin/webdriver-manager update
    - node_modules/.bin/ng build --prod --aot
  stage: build
  script: cp app.yaml dist/health-check-client
  artifacts:
    name: "project-$CI_COMMIT_REF_NAME"
    paths:
      - client/dist/
  only:
    - tags
    
deploy:production:
    stage: deploy
    environment:
      name: production
      url: http://demo-app.com
    before_script:
      - wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-218.0.0-linux-x86.tar.gz
      - tar -xzf  google-cloud-sdk-218.0.0-linux-x86.tar.gz
      - ./google-cloud-sdk/install.sh
    dependencies:
      - release:build
    script:
      - dir
      - echo $GAE_KEY_FILE > gae_auth.json
      - ./google-cloud-sdk/bin/gcloud auth activate-service-account --key-file gae_auth.json
      - ./google-cloud-sdk/bin/gcloud app deploy --project=$GAE_PROJECT_ID
    when: manual
    only:
      - tags